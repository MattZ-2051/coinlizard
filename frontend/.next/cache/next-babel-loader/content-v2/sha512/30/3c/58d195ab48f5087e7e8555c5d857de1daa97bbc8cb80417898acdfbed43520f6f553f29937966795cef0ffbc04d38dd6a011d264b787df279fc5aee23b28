{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/benpu/Documents/coinlizard/frontend/pages/index.js\";\nimport Head from \"next/head\";\nimport styles from \"../styles/Home.module.css\";\nimport CoinGecko from \"coingecko-api\";\nconst coinGeckoClient = new CoinGecko();\nexport default function Home(props) {\n  const {\n    data\n  } = props.result;\n\n  const formatPercent = number => `${new Number(number).toFixed(2)}%`;\n\n  const formatDollar = (number, maximumSignificantDigits) => new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    maximumSignificantDigits\n  }).format(number);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Coinmarketcap clone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"icon\",\n        href: \"/favicon.ico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Coinmarketcap clone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Symbol\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"24H Change\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Market cap\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map(coin => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: coin.image,\n              style: {\n                width: 25,\n                height: 25,\n                marginRight: 10\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this), coin.symbol.toUpperCase()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: coin.price_change_percentage_24h > 0 ? \"text-success\" : \"text-danger\",\n              children: formatPercent(coin.price_change_percentage_24h)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatDollar(coin.current_price, 20)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatDollar(coin.market_cap, 12)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)]\n        }, coin.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\nexport async function getServerSideProps(context) {\n  const params = {\n    order: CoinGecko.ORDER.MARKET_CAP_DESC\n  };\n  const result = await coinGeckoClient.coins.markets({\n    params\n  });\n  return {\n    props: {\n      result\n    }\n  };\n}","map":{"version":3,"sources":["/Users/benpu/Documents/coinlizard/frontend/pages/index.js"],"names":["Head","styles","CoinGecko","coinGeckoClient","Home","props","data","result","formatPercent","number","Number","toFixed","formatDollar","maximumSignificantDigits","Intl","NumberFormat","style","currency","format","container","map","coin","image","width","height","marginRight","symbol","toUpperCase","price_change_percentage_24h","current_price","market_cap","id","getServerSideProps","context","params","order","ORDER","MARKET_CAP_DESC","coins","markets"],"mappings":"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","sourcesContent":["import Head from \"next/head\";\nimport styles from \"../styles/Home.module.css\";\nimport CoinGecko from \"coingecko-api\";\nconst coinGeckoClient = new CoinGecko();\n\nexport default function Home(props) {\n  const { data } = props.result;\n\n  const formatPercent = (number) => `${new Number(number).toFixed(2)}%`;\n\n  const formatDollar = (number, maximumSignificantDigits) =>\n    new Intl.NumberFormat(\"en-US\", {\n      style: \"currency\",\n      currency: \"USD\",\n      maximumSignificantDigits,\n    }).format(number);\n\n  return (\n    <div className={styles.container}>\n      <Head>\n        <title>Coinmarketcap clone</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n\n      <h1>Coinmarketcap clone</h1>\n\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>Symbol</th>\n            <th>24H Change</th>\n            <th>Price</th>\n            <th>Market cap</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((coin) => (\n            <tr key={coin.id}>\n              <td>\n                <img\n                  src={coin.image}\n                  style={{ width: 25, height: 25, marginRight: 10 }}\n                />\n                {coin.symbol.toUpperCase()}\n              </td>\n              <td>\n                <span\n                  className={\n                    coin.price_change_percentage_24h > 0\n                      ? \"text-success\"\n                      : \"text-danger\"\n                  }\n                >\n                  {formatPercent(coin.price_change_percentage_24h)}\n                </span>\n              </td>\n              <td>{formatDollar(coin.current_price, 20)}</td>\n              <td>{formatDollar(coin.market_cap, 12)}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport async function getServerSideProps(context) {\n  const params = {\n    order: CoinGecko.ORDER.MARKET_CAP_DESC,\n  };\n  const result = await coinGeckoClient.coins.markets({ params });\n  return {\n    props: {\n      result,\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}